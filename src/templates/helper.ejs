<div class="helper">
  <a class="helper__trigger" href="javascript:void(0);">
    <svg class="icon" viewBox="0 0 100 100" fill="currentColor">
      <path
        d="M94,39.7h-4c-3.2,0-5.9-2.8-5.9-6.1c0-1.7,0.7-3.2,2-4.3l2.6-2.5c2.5-2.5,2.5-6.6,0-9.1L82.8,12c-1.1-1.1-2.8-1.8-4.6-1.8      c-1.7,0-3.4,0.7-4.6,1.8l-2.5,2.4c-1.2,1.3-2.7,2-4.4,2c-3.3,0-6.1-2.7-6.1-5.9v-4C60.6,3,57.8,0,54.2,0h-7.9C42.8,0,40,3,40,6.5v4      c0,3.2-2.8,5.9-6.1,5.9c-1.7,0-3.2-0.7-4.3-1.9L27,12c-1.1-1.2-2.8-1.8-4.6-1.8c-1.7,0-3.4,0.7-4.6,1.8L12,17.7      c-2.5,2.5-2.5,6.6,0,9.1l2.5,2.4c1.3,1.2,2,2.7,2,4.4c0,3.3-2.7,6.1-5.9,6.1h-4C3,39.7,0,42.5,0,46v4v4c0,3.5,3,6.3,6.6,6.3h4      c3.2,0,5.9,2.8,5.9,6.1c0,1.7-0.7,3.2-2,4.4L12,73.2c-2.5,2.5-2.5,6.6,0,9.1l5.8,5.8c1.1,1.2,2.8,1.8,4.6,1.8c1.7,0,3.4-0.7,4.6-1.8      l2.5-2.5c1.1-1.2,2.7-1.9,4.3-1.9c3.3,0,6.1,2.7,6.1,5.9v4c0,3.5,2.8,6.5,6.4,6.5h7.9c3.5,0,6.4-3,6.4-6.5v-4c0-3.2,2.8-5.9,6.1-5.9      c1.7,0,3.2,0.7,4.4,2l2.5,2.4c1.2,1.1,2.8,1.8,4.6,1.8s3.4-0.7,4.6-1.8l5.8-5.8c2.5-2.5,2.5-6.6,0-9.1L86,70.7c-1.3-1.1-2-2.7-2-4.3      c0-3.3,2.7-6.1,5.9-6.1h4c3.5,0,6.1-2.8,6.1-6.3v-4v-4C100.1,42.5,97.5,39.7,94,39.7z M71.1,50L71.1,50c0,11.5-9.3,20.8-20.9,20.8      S29.4,61.5,29.4,50l0,0l0,0c0-11.5,9.3-20.8,20.9-20.8S71.1,38.5,71.1,50L71.1,50z"
      ></path></svg
  ></a>
  <div class="helper__container">
    <!--section-->
    <div class="helper__section">
      <span class="helper__section-title">События:</span>
      <div class="helper__section-content">
        <div
          class="helper__section-button"
        
          data-filter="filter"
          >Открыть фильтр</div
        >
      </div>
    </div>
    <!--section-->
    <div class="helper__section">
      <span class="helper__section-title">Страницы:</span>
      <div class="helper__section-content">
        <a class="helper__section-button" href="index.html">Главная</a>
          <a class="helper__section-button" href="item.html">Карточка</a

      </div>
    </div>
   
   
  </div>
</div>

<style>
  @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400&display=swap');
  @import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@400&display=swap');
  .helper {
    font-family: 'Roboto', sans-serif;
    position: fixed;
    z-index: 2000;
    left: 0;
    top: 50%;
    transform: translate(-100%, -50%);
    transition: transform 0.25s ease-in-out;
    width: 100%;
    max-width: 280px;
    max-height: 100%;
    color: #000;
    display: flex;
  }
  .helper__trigger {
    display: block;
    position: absolute;
    left: calc(100% - 1px);
    top: 50%;
    transform: translateY(-50%);
    width: 40px;
    height: 40px;
    border-radius: 0 2px 2px 0;
    border-width: 1px 1px 1px 0;
    border-style: solid;
    border-color: #d9d9de;
    background-color: #fff;
    box-shadow: 3px 3px 3px 0px rgba(0, 0, 0, 0.05);
    display: flex;
    z-index: 2;
    color: #353535;
    transition: color 0.25s ease-in-out;
  }
  .helper__trigger .icon {
    margin: auto;
    width: 18px;
    height: 18px;
    color: inherit;
    transition: transform 0.25s ease-in-out;
    -webkit-animation: 5s linear rotation infinite;
    animation: 5s linear rotation infinite;
  }
  .helper__trigger[data-touch],
  .helper__trigger[data-hover] {
    color: #ca2323;
  }
  .helper__container {
    max-height: 100%;
    position: relative;
    z-index: 1;
    padding: 20px 15px;
    background-color: #fff;
    box-shadow: 3px 3px 3px 0px rgba(0, 0, 0, 0.05);
    width: 100%;
    border-radius: 0 0 2px 0;
    border-width: 1px 1px 1px 0;
    border-style: solid;
    border-color: #d9d9de;
    overflow: auto;
  }
  .helper__section:not(:last-child) {
    margin-bottom: 15px;
  }
  .helper__section-title {
    font-size: 14px;
    font-weight: 500;
    display: block;
    margin: 0 0 10px 0;
    font-family: 'Open Sans', sans-serif;
  }
  .helper__section-content {
    margin: 0 -5px -5px 0;
    display: flex;
    flex-wrap: wrap;
  }
  .helper__section-button {
    margin: 0 5px 5px 0;
    font-size: 12px;
    font-weight: 400;
    text-align: center;
    background-color: #353535;
    color: #fff !important;
    transition: background-color 0.25s ease-in-out;
    line-height: 32px;
    min-height: 32px;
    min-width: 32px;
    padding: 0 10px;
    border-radius: 2px;
    text-decoration: none;
    border: none;
  }
  .helper__section-button[data-touch],
  .helper__section-button[data-hover] {
    background-color: #000;
  }
  .helper__section-button.active {
    pointer-events: none;
    background-color: #ca2323;
  }
  .helper.active {
    transform: translate(0, -50%);
  }
  .helper.active .helper__trigger .icon {
    transform: rotate(180deg);
  }

  @-webkit-keyframes rotation {
    0% {
      transform: rotate(0);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  @keyframes rotation {
    0% {
      transform: rotate(0);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  /*# sourceMappingURL=maps/helper.css.map */
</style>

<script>
  
document.addEventListener('DOMContentLoaded', function () {
  Helper.init();
});

const Helper = {
  init: function () {
    this.$block = document.querySelector('.helper');
    this.$trigger = this.$block.querySelector('.helper__trigger');

    this.set_active_page();

    this.$trigger.addEventListener('click', () => {
      if (!this.state) {
        this.open();
      } else {
        this.close();
      }
    });
  },
  set_active_page: function () {
    let values = location.href.split('/'),
      last_value = values[values.length - 1],
      page = last_value == '' ? 'index.html' : last_value;

    let $links = this.$block.querySelectorAll('a');

    $links.forEach(($this) => {
      let href_values = $this.getAttribute('href').split('/'),
        href_page = href_values[href_values.length - 1];

      if (page == href_page) {
        $this.classList.add('active');
      }
    });
  },
  open: function () {
    this.state = true;
    this.$block.classList.add('active');
  },
  close: function () {
    this.state = false;
    this.$block.classList.remove('active');
  },
};
</script>